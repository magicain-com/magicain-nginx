events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    upstream admin_app {
        server host.docker.internal:8080;
    }

    upstream agent_app {
        server host.docker.internal:8081;
    }

    server {
        listen 80;
        server_name localhost;

        # Admin app - proxy everything under /admin/ to port 8080
        location /admin/ {
            # Note: proxy_pass without trailing slash will strip the trailing slash from the URL
            # The upstream is proxied to http://docker.for.mac.localhost:8080/admin/
            proxy_pass http://admin_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Agent app - proxy everything under /agent/ to port 8081
        location /agent/ {
            # Note: proxy_pass without trailing slash will strip the trailing slash from the URL
            # The upstream is proxied to http://docker.for.mac.localhost:8081/agent/
            proxy_pass http://agent_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle WebSocket connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            return 404;
        }
    }
}